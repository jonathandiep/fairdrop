/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Fairdrop, FairdropInterface } from "../Fairdrop";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "AirdropCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_cid",
        type: "string",
      },
    ],
    name: "addAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "airdrops",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getAirdropAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getAirdropCID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b50610fef806100256000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806306661abd1461005c57806328c7cf9c1461007a57806360db50821461015f578063a504428a14610239578063c36f8d50146102e0575b600080fd5b61006461034e565b6040518082815260200191505060405180910390f35b61015d6004803603606081101561009057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156100d757600080fd5b8201836020820111156100e957600080fd5b8035906020019184600183028401116401000000008311171561010b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610354565b005b61018b6004803603602081101561017557600080fd5b810190808035906020019092919050505061053e565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101fd5780820151818401526020810190506101e2565b50505050905090810190601f16801561022a5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6102656004803603602081101561024f57600080fd5b810190808035906020019092919050505061061a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a557808201518184015260208101905061028a565b50505050905090810190601f1680156102d25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61030c600480360360208110156102f657600080fd5b81019080803590602001909291905050506106d1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60015481565b600073ffffffffffffffffffffffffffffffffffffffff16600080600154815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103c457600080fd5b600083836040516103d490610710565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051809103906000f08015801561042d573d6000803e3d6000fd5b50905060405180604001604052808273ffffffffffffffffffffffffffffffffffffffff16815260200183815250600080600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906104d292919061071d565b509050508073ffffffffffffffffffffffffffffffffffffffff167f69e4f3213b628a2b80dab9e90ea182bebd29bc7279115728fbea918fa067d3e76001546040518082815260200191505060405180910390a260016000815480929190600101919050555050505050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106105780601f106105e557610100808354040283529160200191610610565b820191906000526020600020905b8154815290600101906020018083116105f357829003601f168201915b5050505050905082565b60606000808381526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106c55780601f1061069a576101008083540402835291602001916106c5565b820191906000526020600020905b8154815290600101906020018083116106a857829003601f168201915b50505050509050919050565b600080600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6107f7806107c383390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061075e57805160ff191683800117855561078c565b8280016001018555821561078c579182015b8281111561078b578251825591602001919060010190610770565b5b509050610799919061079d565b5090565b6107bf91905b808211156107bb5760008160009055506001016107a3565b5090565b9056fe60c060405234801561001057600080fd5b506040516107f73803806107f78339818101604052604081101561003357600080fd5b8101908080519060200190929190805190602001909291905050508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060a08181525050505060805160601c60a0516107386100bf600039806102bc52806104f3525080610341528061056852506107386000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632e7ba6ef146100515780632eb4a7ab146100fe5780639e34070f1461011c578063fc0c546a14610162575b600080fd5b6100fc6004803603608081101561006757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156100b857600080fd5b8201836020820111156100ca57600080fd5b803590602001918460208302840111640100000000831117156100ec57600080fd5b90919293919293905050506101ac565b005b6101066104f1565b6040518082815260200191505060405180910390f35b6101486004803603602081101561013257600080fd5b8101908080359060200190929190505050610515565b604051808215151515815260200191505060405180910390f35b61016a610566565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101b585610515565b1561020b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806106976028913960400191505060405180910390fd5b6000858585604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012090506102e1838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050507f00000000000000000000000000000000000000000000000000000000000000008361058a565b610336576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806106bf6021913960400191505060405180910390fd5b61033f86610642565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156103e657600080fd5b505af11580156103fa573d6000803e3d6000fd5b505050506040513d602081101561041057600080fd5b8101908080519060200190929190505050610476576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806106e06023913960400191505060405180910390fd5b7f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed026868686604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610100838161052357fe5b0490506000610100848161053357fe5b06905060008060008481526020019081526020016000205490506000826001901b90508081831614945050505050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008082905060008090505b85518110156106345760008682815181106105ad57fe5b602002602001015190508083116105f45782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250610626565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b508080600101915050610596565b508381149150509392505050565b6000610100828161064f57fe5b0490506000610100838161065f57fe5b069050806001901b60008084815260200190815260200160002054176000808481526020019081526020016000208190555050505056fe4d65726b6c654469737472696275746f723a2044726f7020616c726561647920636c61696d65642e4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f662e4d65726b6c654469737472696275746f723a205472616e73666572206661696c65642ea2646970667358221220c3f2028cb32f7e2d68b6701006152d52c1f53b7055cacb4a99cb962ac5c0b35a64736f6c634300060b0033a2646970667358221220f6b0da111773d5bcd20f96379282dbd992cd85cfdfc7e4f224414163e3cb11a064736f6c634300060b0033";

export class Fairdrop__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Fairdrop> {
    return super.deploy(overrides || {}) as Promise<Fairdrop>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Fairdrop {
    return super.attach(address) as Fairdrop;
  }
  connect(signer: Signer): Fairdrop__factory {
    return super.connect(signer) as Fairdrop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FairdropInterface {
    return new utils.Interface(_abi) as FairdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Fairdrop {
    return new Contract(address, _abi, signerOrProvider) as Fairdrop;
  }
}
